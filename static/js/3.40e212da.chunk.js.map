{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","s","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","info","onSubmit","styles","formSummaryError","createField","Input","type","TextArea","contacts","Object","keys","map","key","ProfileData","isOwner","goToEditMode","onClick","lookingJob","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact","ProfileInfo","savePhoto","saveProfile","Preloader","titlePicture","src","alt","infoBlock","avatar","photos","large","userPhoto","target","files","length","userName","fullName","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","Field","placeholder","name","component","validate","required","MyPosts","React","memo","postsElements","postsData","p","posts","values","addPost","newPostText","post","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.40e212da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePicture\":\"ProfileInfo_titlePicture__3Egg9\",\"info\":\"ProfileInfo_info__y3pkn\",\"userName\":\"ProfileInfo_userName__2ZqDj\",\"avatar\":\"ProfileInfo_avatar__3gSxa\",\"status\":\"ProfileInfo_status__2t8RL\",\"infoBlock\":\"ProfileInfo_infoBlock__EWpeF\",\"infoDate\":\"ProfileInfo_infoDate__S70PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__18mJh\",\"post\":\"MyPosts_post___jAnA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3arQ6\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b>  <span onDoubleClick={activateEditMode} className={s.status}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport {OptionalLink} from \"../../common/OptionalLink/OptionalLink\";\r\nimport facebook from \"../../../assets/Image/iconSocialNetwork/facebook.png\";\r\nimport generalPage from \"../../../assets/Image/iconSocialNetwork/generalPage.png\";\r\nimport vk from \"../../../assets/Image/iconSocialNetwork/vk.png\";\r\nimport twitter from \"../../../assets/Image/iconSocialNetwork/twitter.png\";\r\nimport instagram from \"../../../assets/Image/iconSocialNetwork/instagram.png\";\r\nimport youTubeIcon from \"../../../assets/Image/iconSocialNetwork/youTube.png\";\r\nimport gitHub from \"../../../assets/Image/iconSocialNetwork/gitHub.png\";\r\nimport contacts from \"../../../assets/Image/iconSocialNetwork/contacts.png\";\r\nimport {createField, Input, TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../common/FormsControls/FormControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form className={s.info} onSubmit={handleSubmit}>\r\n\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n\r\n        {<div>\r\n            <button>save</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b>{createField(\"Full Name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job description</b>\r\n            {createField(\"My professionals skills\", \"lookingForAJobDescription\", [], TextArea)}\r\n        </div>\r\n        <div>\r\n            <b>About Me:</b>\r\n            {createField(\"About Me\", \"aboutMe\", [], TextArea)}\r\n        </div>\r\n        <div className={s.contacts}>\r\n            <b>Contacts:</b>\r\n            <div>\r\n                <b>Contact</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <b> {key}: {createField(key, \"contacts.\" + key, [], Input)} </b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {OptionalLink} from \"../../common/OptionalLink/OptionalLink\";\r\nimport youTubeIcon from '../../../assets/Image/iconSocialNetwork/youTube.png';\r\nimport facebook from '../../../assets/Image/iconSocialNetwork/facebook.png';\r\nimport generalPage from '../../../assets/Image/iconSocialNetwork/generalPage.png';\r\nimport gitHub from '../../../assets/Image/iconSocialNetwork/gitHub.png';\r\nimport contacts from '../../../assets/Image/iconSocialNetwork/contacts.png';\r\nimport twitter from '../../../assets/Image/iconSocialNetwork/twitter.png';\r\nimport vk from '../../../assets/Image/iconSocialNetwork/vk.png';\r\nimport instagram from '../../../assets/Image/iconSocialNetwork/instagram.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/Image/pngegg.png'\r\nimport {useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n         saveProfile(formData).then(()=>{\r\n             setEditMode(false)\r\n         })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.titlePicture}>\r\n                <img\r\n                    src={'https://st.depositphotos.com/1288156/4466/i/600/depositphotos_44660695-stock-photo-himalaya-mountains-black-and-white.jpg'}\r\n                    alt={'no img'}/>\r\n            </div>\r\n            <div className={s.infoBlock}>\r\n                <div>\r\n                    <img className={s.avatar} src={profile.photos.large || userPhoto} alt={userPhoto}/>\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                    <div className={s.userName}>\r\n                        {profile.fullName}\r\n                    </div>\r\n\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                    {editMode\r\n                        ? <ProfileDataForm  profile={profile} initialValues={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}\r\n                                       profile={profile} isOwner={isOwner}/>}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.info}>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div className={s.lookingJob}>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob}\r\n        </div>\r\n        <div className={s.lookingJob}>\r\n            <b>Looking for a job description</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>About Me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div className={s.contacts}>\r\n            {/*<b>Contacts:</b>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.facebook}*/}\r\n            {/*              title={<img src={facebook} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.website}*/}\r\n            {/*              title={<img src={generalPage} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.vk}*/}\r\n            {/*              title={<img src={vk} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.twitter}*/}\r\n            {/*              title={<img src={twitter} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.instagram}*/}\r\n            {/*              title={<img src={instagram} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.youtube}*/}\r\n            {/*              title={<img src={youTubeIcon} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.github}*/}\r\n            {/*              title={<img src={gitHub} alt={\"no img\"}/>}/>*/}\r\n            {/*<OptionalLink s={s.infoDate} link={profile.contacts.mainLink}*/}\r\n            {/*              title={<img src={contacts} alt={\"no img\"}/>}/>*/}\r\n            {/*Test map contacts*/}\r\n            <div>\r\n                <b>Contact</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n//Test component\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","import s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n                <div className={s.item}>\r\n                    <img src='https://avatarko.ru/img/kartinka/14/multfilm_Futurama_Bender_13773.jpg'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>Like</span> {props.likesCount}\r\n                    </div>\r\n                </div>\r\n    );\r\n}\r\n\r\nexport default Post","import s from './MyPosts.module.css';\r\nimport Post from \"./Posts/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <div>\r\n                <Field placeholder={'Enter Your Text'} name={'newPostText'} component={TextArea}\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostRedux'})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.postsData.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let OnAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h2>My posts</h2>\r\n            <AddNewPostReduxForm onSubmit={OnAddPost}/>\r\n            <div className={s.post}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n    },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         isOwner={props.isOwner}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}), withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}